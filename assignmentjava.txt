a.

package javaprogram;

public class PatternDemo2 {
public static void main(String[] args) {
	int rows=3, columns=5, i, j;

	for(i = 1; i <=rows ; i++)
	{
		for(j = 1; j <= columns; j++)
		{
			System.out.print("* "); 
		}
		System.out.print("\n"); 
	}	
   }
}
output:
* * * * * 
* * * * * 
* * * * * 


==========================================================================================================
b.

package javaprogram;

public class patternD {

	public static void main(String[] args) {
		//outer loop
           for(int r=1;r<=3;r++) {
		for(int c=1;c<=5;c++) {
		 if(r==1||r==3||c==1||c==5)
		    {
			System.out.print(" * ");
							
		    }
		 else 
		    {
			System.out.print("   ");
		    }
		}
	   System.out.println();
	}

   }
}
output:
 *  *  *  *  * 
 *           * 
 *  *  *  *  * 
==========================================================================================================
c.

package javaprogram;

public class PatternRightAngle {

	public static void main(String[] args) {
		int rows=6,stars=1,i,j;
		
		for(i=0;i<rows;i++) {
			
			for(j=0;j<stars;j++) {
				System.out.print("*");
			}
			System.out.println( );
			stars++;
		}
		

	}

}
output:
*
**
***
****
*****
******
==========================================================================================================
d.

package javaprogram;

public class PatternRevrseRtAngleTringle {

	public static void main(String[] args) {
int rows=6,stars=6,i,j;
		
		for(i=0;i<rows;i++) {
			
			for(j=0;j<stars;j++) {
				System.out.print("*");
			}
			System.out.println( );
			stars--;
	}

   }
}
output:
******
*****
****
***
**
*
========================================================================================================
e.

package javaprogram;

public class PaternTringle {
	public static void main(String[] args) {
		int row=6,space=5,star=1;
		int i,j;
		for(int r=1;r<=row;r++)
		{
			for(i=1;i<=space;i++)
		   {
		      System.out.print(" ");
		   }
			for(j=1;j<=star;j++)
			{
				System.out.print("*");
			}
			System.out.println( );
			space--;
			star++;

        }
     }
}
output:
      * 
     *  * 
    *  *  * 
   *  *  *  * 
  *  *  *  *  * 
 *  *  *  *  *  * 


==========================================================================================================
f.
package javaprogram;

public class TestPattern {
	public static void main(String[] args)
    {
        for (int i = 0; i  <  6; i++)
        {
            for (int j = 0; j  <  i; j++)
            {
                System.out.print(" ");
            }
            for (int j = i; j  <  6; j++)
            {
                System.out.print("* ");
            }
            System.out.println();
        }
    }

}


output:
* * * * * * 
 * * * * * 
  * * * * 
   * * * 
    * * 
     * 

===============================================================================================================
g.
package javaprogram;

public class Pattern11 {

	public static void main(String[] args) {
		 int n = 6;
	        for (int i = 0; i  <  n; i++)
	        {
	            for (int j = n - 1; j  >  i; j--)
	            {
	                System.out.print(" ");
	            }
	            if (i == 0 || i == n - 1)
	            {
	                for (int k = 0; k  <= i; k++)
	                {
	                    System.out.print("* ");
	                }
	            } 
	            else
	            {
	                System.out.print("*");
	                for (int k = 1; k  <  i; k++)
	                {
	                    System.out.print("  ");
	                }
	                System.out.print(" *");
	            }
	            System.out.println();
	        }

	}

}
output:
     * 
    * *
   *   *
  *     *
 *       *
* * * * * * 


===============================================================================================================
h.

package javaprogram;

public class FullPyramidPattern {

	public static void main(String[] args) {
		int rows = 5, k = 0, count = 0, count1 = 0;

	    for (int i = 1; i <= rows; ++i) {
	      for (int space = 1; space <= rows - i; ++space) {
	        System.out.print("  ");
	        ++count;
	      }

	      while (k != 2 * i - 1) {
	        if (count <= rows - 1) {
	          System.out.print((i + k) + " ");
	          ++count;
	        } else {
	          ++count1;
	          System.out.print((i + k - 2 * count1) + " ");
	        }

	        ++k;
	      }
	      count1 = count = k = 0;

	      System.out.println();
	    }
	  }
	


	}


output:

        1 
      2 3 2 
    3 4 5 4 3 
  4 5 6 7 6 5 4 
5 6 7 8 9 8 7 6 5 

=================================================================================================================
2. Find the Maximum Element and Average of Elements in an Array.

package javaprogram;

public class MaxAvgArray {

	public static void main(String[] args) {
		int arr[] = {12, 13, 1, 10, 34, 10};
	     int max = arr[0];
	     int sum=0;
	     float avg;
	     for(int i=0; i<arr.length; i++)
	     {
	    	 sum+=arr[i];
	       if(max < arr[i])
	       {
	          max = arr[i];
	       }
	     }
	    System.out.println("Mximun element is:"+max); 
	    System.out.println("Sum is:"+sum); 
	    avg=sum/arr.length;
	    System.out.println("Average value of the array elements is : " + avg); 
	}

}

output:
Mximun element is:34
Sum is:80
Average value of the array elements is : 13.0

==================================================================================================================
3. Reverse a given Array and print.

package javaprogram;

public class ReverseArray {

	public static void main(String[] args) {
		int start=0,end=8,temp,i;
		int arr[]= {1,2,3,4,5,6,9,8,3};
		
		while(start<end) {
			temp=arr[start];
			arr[start]=arr[end];
			arr[end]=temp;
			
			start++;
			end--;
		}
		System.out.println("Reverse Array...............");
		for(i=0;i<arr.length;i++) {
			System.out.println("arr["+i+"]="+arr[i]);
	}

  }
}
ouput:
Reverse Array...............
arr[0]=3
arr[1]=8
arr[2]=9
arr[3]=6
arr[4]=5
arr[5]=4
arr[6]=3
arr[7]=2
arr[8]=1
=====================================================================================================
4.Find the second maximum and second minimum Elements of an array.

package javaprogram;
import java.util.Scanner;
public class SecondMinMaxArray {

	public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);
        int n;     
        System.out.println("Enter the size of the array");
        n=sc.nextInt();   
        
        int arr[]=new int[n];  
       System.out.println("Enter the array");  
       for(int i=0;i<n;i++)    
       {
           arr[i]=sc.nextInt();
       }
              
       for(int i=0;i<n;i++)    
       {
           for(int j=i+1;j<n;j++)    
           {
               if(arr[i]<arr[j])     
               {
                   int temp=arr[i];
                   arr[i]=arr[j];
                   arr[j]=temp;
               }
           }
       }
       
       System.out.println("Second Largest element is "+arr[1]);   //Display second largest element.
       System.out.println("Second Smallest element is "+arr[n-2]);  //Display second smallest element.
   }

}

output:
Enter the size of the array  7
Enter the array
23 45 43 2 46 78 87
Second Largest element is  78
Second Smallest element is  23

=====================================================================================================================================================
5. Count the number of occurrence of each element of an array.

package javaprogram;

public class ArrayOccurence {

	public static void main(String[] args) {
		  int [] arr = new int [] {1, 2, 8, 3, 2, 2, 2, 5, 1,5};  
	        //Array fr will store frequencies of element  
	        int [] fr = new int [arr.length];  
	        int visited = -1;  
	        for(int i = 0; i < arr.length; i++){  
	            int count = 1;  
	            for(int j = i+1; j < arr.length; j++){  
	                if(arr[i] == arr[j]){  
	                    count++;  
	                    //To avoid counting same element again  
	                    fr[j] = visited;  
	                }  
	            }  
	            if(fr[i] != visited)  
	                fr[i] = count;  
	        }  
	  
	        //Displays the frequency of each element present in array  
	        System.out.println("---------------------------------------");  
	        System.out.println(" Element | Frequency");  
	        System.out.println("---------------------------------------");  
	        for(int i = 0; i < fr.length; i++){  
	            if(fr[i] != visited)  
	                System.out.println("    " + arr[i] + "    |    " + fr[i]);  
	        }  
	        System.out.println("----------------------------------------");  

	}

}

output:
-------------------------
 Element | Frequency
-------------------------
    1    |    2
    2    |    4
    8    |    1
    3    |    1
    5    |    2
-------------------------






 
